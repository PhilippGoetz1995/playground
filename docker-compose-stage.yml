services:
  frontend:
    build:
      # With the context all paths need below will start from the directory where the compose file is in
      context: .
      dockerfile: ./frontend/Dockerfile-stage
    ports:
      - "3000:3000"
    volumes:
      # Mount local src folder with container src folder
      - ./frontend/src:/app/src
    networks:
      - webnet
    environment:
      # This is needed so that mounted volume for react application is working
      - WATCHPACK_POLLING=true

  backend:
    build:
      # With the context all paths need below will start from the directory where the compose file is in
      context: .
      dockerfile: ./backend/Dockerfile-stage
    ports:
      - "8000:8000"
    volumes:
      # Mount local src folder with container src folder
      - ./backend:/app
    #TODO => Static File implementation for Images etc.
    #volumes:
    #  - static_volume:/app/static
    networks:
      - webnet

  webserver:
    build:
      # With the context all paths need below will start from the directory where the compose file is in
      context: .
      dockerfile: ./webserver/Dockerfile-stage
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - webnet

# With that network the following call is possible from nginx configuration http://frontend:3000;
networks:
  webnet:
